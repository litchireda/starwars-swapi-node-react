[{"C:\\Users\\reda\\Documents\\GitHub\\starwars-swapi-node-react\\sw-frontend\\src\\App.js":"1","C:\\Users\\reda\\Documents\\GitHub\\starwars-swapi-node-react\\sw-frontend\\src\\reportWebVitals.js":"2","C:\\Users\\reda\\Documents\\GitHub\\starwars-swapi-node-react\\sw-frontend\\src\\index.js":"3","C:\\Users\\reda\\Documents\\GitHub\\starwars-swapi-node-react\\sw-frontend\\src\\components\\main.js":"4","C:\\Users\\reda\\Documents\\GitHub\\starwars-swapi-node-react\\sw-frontend\\src\\components\\header.js":"5","C:\\Users\\reda\\Documents\\GitHub\\starwars-swapi-node-react\\sw-frontend\\src\\components\\pages\\detailsPage.js":"6","C:\\Users\\reda\\Documents\\GitHub\\starwars-swapi-node-react\\sw-frontend\\src\\components\\pages\\HomePage.js":"7","C:\\Users\\reda\\Documents\\GitHub\\starwars-swapi-node-react\\sw-frontend\\src\\components\\pages\\details\\people.js":"8","C:\\Users\\reda\\Documents\\GitHub\\starwars-swapi-node-react\\sw-frontend\\src\\components\\pages\\search\\resultbox.js":"9","C:\\Users\\reda\\Documents\\GitHub\\starwars-swapi-node-react\\sw-frontend\\src\\components\\pages\\factory\\factory.js":"10","C:\\Users\\reda\\Documents\\GitHub\\starwars-swapi-node-react\\sw-frontend\\src\\components\\pages\\details\\film.js":"11","C:\\Users\\reda\\Documents\\GitHub\\starwars-swapi-node-react\\sw-frontend\\src\\components\\pages\\details\\planet.js":"12","C:\\Users\\reda\\Documents\\GitHub\\starwars-swapi-node-react\\sw-frontend\\src\\components\\pages\\details\\species.js":"13","C:\\Users\\reda\\Documents\\GitHub\\starwars-swapi-node-react\\sw-frontend\\src\\components\\pages\\details\\starship.js":"14","C:\\Users\\reda\\Documents\\GitHub\\starwars-swapi-node-react\\sw-frontend\\src\\components\\pages\\details\\vehicle.js":"15"},{"size":197,"mtime":1607966134510,"results":"16","hashOfConfig":"17"},{"size":362,"mtime":1607005633799,"results":"18","hashOfConfig":"17"},{"size":547,"mtime":1607179542700,"results":"19","hashOfConfig":"17"},{"size":1299,"mtime":1608121646730,"results":"20","hashOfConfig":"17"},{"size":386,"mtime":1608061721556,"results":"21","hashOfConfig":"17"},{"size":2566,"mtime":1608124066675,"results":"22","hashOfConfig":"17"},{"size":7132,"mtime":1608124031809,"results":"23","hashOfConfig":"17"},{"size":3036,"mtime":1608116239019,"results":"24","hashOfConfig":"17"},{"size":7120,"mtime":1608124064408,"results":"25","hashOfConfig":"17"},{"size":4476,"mtime":1608063944529,"results":"26","hashOfConfig":"17"},{"size":3047,"mtime":1608060678050,"results":"27","hashOfConfig":"17"},{"size":2758,"mtime":1608063957311,"results":"28","hashOfConfig":"17"},{"size":2995,"mtime":1608115974850,"results":"29","hashOfConfig":"17"},{"size":2920,"mtime":1608116988892,"results":"30","hashOfConfig":"17"},{"size":2769,"mtime":1608117334035,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"fb8656",{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"38"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\reda\\Documents\\GitHub\\starwars-swapi-node-react\\sw-frontend\\src\\App.js",[],"C:\\Users\\reda\\Documents\\GitHub\\starwars-swapi-node-react\\sw-frontend\\src\\reportWebVitals.js",[],"C:\\Users\\reda\\Documents\\GitHub\\starwars-swapi-node-react\\sw-frontend\\src\\index.js",[],["65","66"],"C:\\Users\\reda\\Documents\\GitHub\\starwars-swapi-node-react\\sw-frontend\\src\\components\\main.js",[],"C:\\Users\\reda\\Documents\\GitHub\\starwars-swapi-node-react\\sw-frontend\\src\\components\\header.js",[],"C:\\Users\\reda\\Documents\\GitHub\\starwars-swapi-node-react\\sw-frontend\\src\\components\\pages\\detailsPage.js",["67"],"C:\\Users\\reda\\Documents\\GitHub\\starwars-swapi-node-react\\sw-frontend\\src\\components\\pages\\HomePage.js",["68"],"import React from 'react';\r\nimport fetch from 'node-fetch';\r\nimport Loader from './../../assets/loader.gif';\r\n\r\nimport ResultBox from './search/resultbox';\r\n\r\nimport Container from 'react-bootstrap/Container';\r\nimport Jumbotron from 'react-bootstrap/Jumbotron';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nimport Form from 'react-bootstrap/Form';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Alert from 'react-bootstrap/Alert';\r\n\r\nexport default class HomePage extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            error: null,\r\n            query: '',\r\n            toSearch: 'people',\r\n            searched: null,\r\n            data: null,\r\n            dataResults: null,\r\n            loading: false,\r\n        };\r\n        this.textChange = this.textChange.bind(this);\r\n        this.selectChange = this.selectChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.changePage  = this.changePage.bind(this);\r\n        this.searchCategory  = this.searchCategory.bind(this);\r\n    }\r\n\r\n    textChange(event) {\r\n        this.setState({  \r\n            query: event.target.value\r\n        });\r\n    }\r\n\r\n    selectChange(event) {\r\n        this.setState({  \r\n            toSearch: event.target.value\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        const toSearchTab = [\r\n            'people',\r\n            'films',\r\n            'planets',\r\n            'vehicles',\r\n            'starships',\r\n            'species'\r\n        ];\r\n\r\n        if (this.props.match) {\r\n            if (!toSearchTab.includes(this.props.match.params.category)) {\r\n                this.props.history.push('/');\r\n            } else {\r\n                this.searchCategory();\r\n            }\r\n        }\r\n    }\r\n\r\n    async searchCategory() {\r\n        const { category } = this.props.match.params;\r\n        this.setState({ searched: category, toSearch: category, loading: true });\r\n        let results = await fetch(`http://localhost:3001/${category}`);\r\n        results = await results.json();\r\n        this.setState({data: results, dataResults: results.results, loading: false});\r\n    }\r\n\r\n    async handleSubmit(event) {\r\n        const { query, toSearch } = this.state;\r\n        event.preventDefault();\r\n        this.setState({\r\n            loading: true,\r\n            searched: toSearch\r\n        });\r\n        let results = await fetch(`http://localhost:3001/${toSearch}?search=${query}`);\r\n        results = await results.json();\r\n        if (results.count === 0) {\r\n            this.setState({error: 'Pas de r√©sultats', loading: false, data: null, dataResults: null});\r\n        } else {\r\n            this.setState({data: results, dataResults: results.results, loading: false, error: null});\r\n        }\r\n    }\r\n\r\n    async changePage(event) {\r\n        const { query, toSearch, data } = this.state;\r\n        this.setState({\r\n            loading:true\r\n        });\r\n        let url = `http://localhost:3001/${toSearch}`;\r\n        if (query) {\r\n            url += `?search=${query}&page=${event.target.value}`;\r\n        } else {\r\n            url += `?page=${event.target.value}`;\r\n        }\r\n        let results = await fetch(url);\r\n        results = await results.json();\r\n        this.setState({data: results, dataResults: results.results, loading: false});\r\n    }\r\n\r\n\r\n    render() {\r\n        const { query, toSearch, error, loading, dataResults, data, searched } = this.state;\r\n        let button = <Button variant=\"danger\" type=\"submit\" disabled={true}> Search </Button>;\r\n        if (query) {\r\n            button = <Button variant=\"primary\" type=\"submit\"> Search </Button>;\r\n        }\r\n        return (\r\n            <React.Fragment>\r\n            <Jumbotron className=\"jumbotron-style\">\r\n                <Container>\r\n                    {\r\n                    this.props.match\r\n                        ?\r\n                    <Row className=\"justify-content-md-center\">\r\n                        <h1 className=\"center-text-jumbotron\">\r\n                            {this.props.match.params.category.charAt(0).toUpperCase() + this.props.match.params.category.slice(1)}\r\n                        </h1>\r\n                    </Row>\r\n                        :\r\n                    <Form onSubmit={this.handleSubmit}>\r\n                        <Row noGutters={true} className=\"justify-content-md-center\">\r\n                            <Col sm={4}>\r\n                                <Form.Control value={toSearch} onChange={this.selectChange} as=\"select\">\r\n                                    <option value='films'>Films</option>\r\n                                    <option default value='people'>People</option>\r\n                                    <option value='planets'>Planets</option>\r\n                                    <option value='species'>Species</option>\r\n                                    <option value='starships'>Starships</option>\r\n                                    <option value='vehicles'>Vehicles</option>\r\n                                </Form.Control>\r\n                            </Col>\r\n                            <Col sm={6}>\r\n                                <Form.Control type=\"text\" value={query} onChange={this.textChange} placeholder=\"What are you looking for ?\" />\r\n                            </Col>\r\n                            <Col sm={2}>\r\n                                { button }\r\n                            </Col>\r\n                        </Row>\r\n                    </Form>\r\n                    }\r\n                </Container>\r\n            </Jumbotron>\r\n            <Container fluid={true}>\r\n                { \r\n                loading \r\n                    ? \r\n                <div className=\"loading-container\"><img src={Loader} alt='loading'/></div> \r\n                    : \r\n                <ResultBox toSearch={searched} data={data} dataResults={dataResults}/>\r\n                }\r\n                {\r\n                error\r\n                    ?\r\n                <Alert variant=\"danger\"> {error} </Alert>\r\n                    :\r\n                <React.Fragment></React.Fragment>\r\n                }\r\n            </Container>\r\n            { \r\n            data\r\n                ?\r\n            <Container>\r\n                <Row>\r\n                    <Col sm={2}>\r\n                        {data.previous ? <Button onClick={this.changePage} value={data.previous.slice(-1)} variant=\"info\">Prev</Button> : <Button variant=\"info\" disabled>Prev</Button>}\r\n                    </Col>\r\n                    <Col sm={2} md={6}>\r\n                    </Col>\r\n                    <Col sm={3}>\r\n                        {data.next ? <div style={{textAlign:'right'}}><Button onClick={this.changePage} value={data.next.slice(-1)} variant=\"info\">Next</Button></div> : <div style={{textAlign:'right'}}><Button variant=\"info\" disabled>Next</Button></div>}\r\n                    </Col>\r\n                    <Col sm={1}>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n                :\r\n                ''\r\n            }\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}","C:\\Users\\reda\\Documents\\GitHub\\starwars-swapi-node-react\\sw-frontend\\src\\components\\pages\\details\\people.js",[],"C:\\Users\\reda\\Documents\\GitHub\\starwars-swapi-node-react\\sw-frontend\\src\\components\\pages\\search\\resultbox.js",["69"],"C:\\Users\\reda\\Documents\\GitHub\\starwars-swapi-node-react\\sw-frontend\\src\\components\\pages\\factory\\factory.js",[],"C:\\Users\\reda\\Documents\\GitHub\\starwars-swapi-node-react\\sw-frontend\\src\\components\\pages\\details\\film.js",["70"],"import React, { Component } from 'react'\r\n\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Jumbotron from 'react-bootstrap/esm/Jumbotron';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Breadcrumb from 'react-bootstrap/Breadcrumb';\r\nimport Card from 'react-bootstrap/Card';\r\n\r\nimport { displayStarships, displaySpecies, displayCharacters, displayPlanets, displayVehicles } from './../factory/factory.js';\r\n\r\n\r\nimport {\r\n    Link\r\n} from 'react-router-dom';\r\n\r\nexport class FilmDetail extends Component {\r\n\r\n    displayBaseInfo(data) {\r\n        return (\r\n            <div className=\"dataDisplay\">\r\n                <Row >\r\n                    <Col sm={12}>\r\n                        <h3>\r\n                            Base Information\r\n                        </h3>\r\n                        <hr/>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col sm={12}>\r\n                    <Card>\r\n                        <Card.Header>Synopsis</Card.Header>\r\n                        <Card.Body>\r\n                            <Card.Text>\r\n                                {data.opening_crawl}\r\n                            </Card.Text>\r\n                        </Card.Body>\r\n                        <Card.Footer>Directed by {data.director}. Produced by {data.producer}.</Card.Footer>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        const { data } = this.props;\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <Jumbotron className=\"jumbotron-style\">\r\n                    <Container>\r\n                    <Row className=\"justify-content-md-center\">\r\n                        <h1 className=\"center-text-jumbotron\">\r\n                            {data.title} {`(${data.release_date.split('-')[0]})`}\r\n                        </h1>\r\n                    </Row>\r\n                    </Container>\r\n                </Jumbotron>\r\n                <Container>\r\n                    <Row>\r\n                        <Col className=\"bc-style\" sm={12}>\r\n                            <Breadcrumb >\r\n                                <Breadcrumb.Item href=\"/\">Home</Breadcrumb.Item>\r\n                                <Breadcrumb.Item href=\"/films\">\r\n                                    Films\r\n                                </Breadcrumb.Item>\r\n                                <Breadcrumb.Item active>{data.title}</Breadcrumb.Item>\r\n                            </Breadcrumb>\r\n                        </Col>\r\n                    </Row>\r\n                    {this.displayBaseInfo(data)}\r\n                    {displayCharacters(data.characters)}\r\n                    {displayVehicles(data.vehicles)}\r\n                    {displayStarships(data.starships)}\r\n                    {displaySpecies(data.species)}\r\n                    {displayPlanets(data.planets)}\r\n                </Container>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default FilmDetail\r\n","C:\\Users\\reda\\Documents\\GitHub\\starwars-swapi-node-react\\sw-frontend\\src\\components\\pages\\details\\planet.js",[],"C:\\Users\\reda\\Documents\\GitHub\\starwars-swapi-node-react\\sw-frontend\\src\\components\\pages\\details\\species.js",[],"C:\\Users\\reda\\Documents\\GitHub\\starwars-swapi-node-react\\sw-frontend\\src\\components\\pages\\details\\starship.js",[],"C:\\Users\\reda\\Documents\\GitHub\\starwars-swapi-node-react\\sw-frontend\\src\\components\\pages\\details\\vehicle.js",[],{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","severity":1,"message":"76","line":44,"column":9,"nodeType":"77","messageId":"78","endLine":57,"endColumn":10},{"ruleId":"79","severity":1,"message":"80","line":93,"column":34,"nodeType":"81","messageId":"82","endLine":93,"endColumn":38},{"ruleId":"75","severity":1,"message":"76","line":160,"column":9,"nodeType":"77","messageId":"78","endLine":173,"endColumn":10},{"ruleId":"79","severity":1,"message":"83","line":14,"column":5,"nodeType":"81","messageId":"82","endLine":14,"endColumn":9},"no-native-reassign",["84"],"no-negated-in-lhs",["85"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-unused-vars","'data' is assigned a value but never used.","Identifier","unusedVar","'Link' is defined but never used.","no-global-assign","no-unsafe-negation"]